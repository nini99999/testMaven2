<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-4.2.xsd">
    <security:http pattern="/extjs/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/loginlogout/toLogin" security="none"/>
    <security:http pattern="/loginlogout/login" security="none"/>
    <!--  Spring-Security 的配置 -->

    <security:http auto-config="true" use-expressions="true">
        <security:headers>
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
        <!--<security:access-denied-handler error-page="/user/denied"/>-->
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>

        <security:csrf disabled="true"/>
        <security:form-login login-page="/loginlogout/toLogin"
                             authentication-failure-url="/loginlogout/logout"
                             default-target-url="/menu/toDemo" username-parameter="name" password-parameter="passwd"/>
        <security:logout
                logout-url="/j_spring_security_logout"
                logout-success-url="/menu/toDemo"
        />
        <security:session-management invalid-session-url="/loginlogout/toLogin"
                                     session-fixation-protection="newSession">
            <security:concurrency-control max-sessions="1" expired-url="/loginlogout/toLogin"/>
        </security:session-management>
    </security:http>
    <!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="authenticationProvider">
        </security:authentication-provider>
    </security:authentication-manager>
    <bean id="authenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="hideUserNotFoundExceptions" value="false"/>
        <property name="userDetailsService" ref="customUserDetailsService"/>
        <!--<beans:property name="passwordEncoder" ref="passwordEncode" />-->
        <!--<beans:property name="saltSource" ref="saltSource" />-->
        <property name="messageSource" ref="messageSource"/>
        <!--<property name="userCache" ref="userCache" />-->
        <!--<property name="messageSource" ref="messageSource" />-->
        <!--<property name="passwordEncoder" ref="passwordEncode" />-->
        <!--<property name="saltSource" ref="saltSource" />-->
    </bean>
    <bean id="customUserDetailsService" class="com.extjs.service.impl.CustomUserDetailsService"/>
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages_zh_CN"/>
    </bean>
    <!-- 配置密码加密类 -->
    <bean id="passwordEncode" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
    <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name="userPropertyToUse" value="username"/>
    </bean>
</beans>